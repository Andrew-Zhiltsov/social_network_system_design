openapi: 3.0.3
info:
  title: Social network for travelers - OpenAPI 3.0
  version: 1.0.0
tags:
  - name: user
    description: Operations about user
  - name: post
    description: Operations about post
  - name: feed
    description: Operations about feed
paths:
  /user:
    post:
      tags:
        - user
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
                url:
                  type: string
                name:
                  type: string
              required:
                - login
                - password
                - url
                - name
            examples:
              request:
                value:
                  login: "Vasya"
                  password: "Strong_password!"
                  url: "/user/vasya"
                  name: "Vasya"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                  url:
                    type: string
                  name:
                    type: string
                required:
                  - login
                  - url
                  - name
              examples:
                response:
                  value:
                    login: "Vasya"
                    url: "/user/vasya"
                    name: "Vasya"
        400:
          description: Bad Request
        500:
          description: Server error
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
              required:
                - login
                - password
            examples:
              request:
                value:
                  login: "Vasya"
                  password: "Strong_password!"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
                required:
                  - jwt
              examples:
                response:
                  value:
                    jwt: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        400:
          description: Invalid username/password supplied
        401:
          description: Unauthorized
        500:
          description: Server error
  /user/logout:
    post:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{login}:
    get:
      tags:
        - user
      summary: Get user by login
      parameters:
        - name: login
          in: path
          description: 'The login that needs to be fetched. Use Vasya for testing. '
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                  url:
                    type: string
                  name:
                    type: string
                required:
                  - login
                  - url
                  - name
              examples:
                response:
                  value:
                    login: "Vasya"
                    url: "/user/vasya"
                    name: "Vasya"
        '400':
          description: Invalid login supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - login
                - name
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - user
      summary: Delete user
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid login supplied
        '404':
          description: User not found
  /user/findByUser:
    get:
      tags:
        - user
      summary: Finds users by masked name
      parameters:
        - name: mask
          in: query
          required: true
          schema:
            type: string
            default: wildcard mask
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    login:
                      type: string
                    url:
                      type: string
                    name:
                      type: string
                  required:
                    - login
                    - url
                    - name
        400:
          description: Invalid user name value
  
  /post:
    post:
      tags:
        - post
      summary: Publish travel post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                description:
                  type: string
                location:
                  type: string
                image:
                  type: string
              required:
                - login
                - description
                - location
            examples:
              request:
                value:
                  login: "Vasya"
                  description: "Cool location!"
                  location: "Salt lake"
                  image: "base64"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  created_at_utc:
                    type: string
                  login:
                    type: string
                  description:
                    type: string
                  location:
                    type: string
                  image-url:
                    type: string
                required:
                  - id
                  - created_at_utc
                  - login
                  - description
                  - image-url
              examples:
                response:
                  value:
                    id: "1937b21b-ac94-43d3-af07-2c9b320b1df4"
                    created_at_utc: "2024-07-30T09:55:02.497"
                    login: "Vasya"
                    description: "Cool location!"
                    location: "Salt lake"
                    image-url: "/image/8fcc11ec-db2a-4272-b1ad-6d3b5e356458"
        400:
          description: Bad Request
        500:
          description: Server error
          
  /post/{id}:
    get:
      tags:
        - post
      summary: Get post by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  created_at_utc:
                    type: string
                  login:
                    type: string
                  description:
                    type: string
                  location:
                    type: string
                  image-url:
                    type: string
                required:
                  - id
                  - created_at_utc
                  - login
                  - description
                  - image-url
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - post
      summary: Update travel post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                image:
                  type: string
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - post
      summary: Delete post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid id supplied
        '404':
          description: Post not found

  /post/findByLocation:
    get:
      tags:
        - post
      summary: Finds posts by location
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    created_at_utc:
                      type: string
                    login:
                      type: string
                    description:
                      type: string
                    location:
                      type: string
                    image-url:
                      type: string
                  required:
                    - id
                    - created_at_utc
                    - login
                    - description
                    - image-url
        400:
          description: Invalid location value
		  
  /post/findByUser:
    get:
      tags:
        - post
      summary: Finds posts by masked name
      parameters:
        - name: mask
          in: query
          required: true
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    created_at_utc:
                      type: string
                    login:
                      type: string
                    description:
                      type: string
                    location:
                      type: string
                    image-url:
                      type: string
                  required:
                    - id
                    - created_at_utc
                    - login
                    - description
                    - image-url
        400:
          description: Invalid user name value
		  
  /feed/subscribe:
    post:
      tags:
        - feed
      summary: Subscribe feed by login
      parameters:
        - name: login
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
        400:
          description: Invalid user name value
  /feed/unsubscribe:
    post:
      tags:
        - feed
      summary: Unsubscribe feed by login
      parameters:
        - name: login
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
        400:
          description: Invalid user name value
		  
  /feed/{login}:
    get:
      tags:
        - feed
      summary: Generates feed for specified login
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    created_at_utc:
                      type: string
                    login:
                      type: string
                    description:
                      type: string
                    location:
                      type: string
                    image-url:
                      type: string
                  required:
                    - id
                    - created_at_utc
                    - login
                    - description
                    - image-url
        400:
          description: Invalid login value